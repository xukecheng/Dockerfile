name: Caddy Image Build

on:   
  push:
    branches:
      - main
    paths:
      - 'Dockerfile.caddy'

env:
  IMAGE_NAME: caddy

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Build image
        run: docker build . --file Dockerfile.caddy --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        # This is where you will update the PAT to GITHUB_TOKEN
        run: echo "${{ secrets.PERSONALTOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      - name: Pull to server
        uses: appleboy/ssh-action@master
        env:
          SERVER_WORKDIR: /home
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          envs: SERVER_WORKDIR 
          script: |
            echo "${{ secrets.PERSONALTOKEN }}" | docker login ghcrio.xukecheng.tech -u $ --password-stdin
            docker pull ghcrio.xukecheng.tech/xukecheng/nobelium:latest

      - name: Deploy Swarm
        uses: appleboy/ssh-action@master
        env:
          SERVER_WORKDIR: /home
        with:
          host: ${{ secrets.SWARM_MANAGER_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          envs: SERVER_WORKDIR 
          script: |
            docker service update Blog_blog --force --image ghcrio.xukecheng.tech/xukecheng/nobelium:latest
