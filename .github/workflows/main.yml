name: Image Build

on:   
  push:
    branches:
      - main

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  paths-filter:
    runs-on: ubuntu-latest
    outputs:
      need: ${{ steps.set_need.outputs.need }}
      image_name: ${{ steps.image.outputs.image_name }}
    steps:
    - uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          caddy:
            - 'Dockerfile.caddy'
          realm:
            - 'Dockerfile.realm'
    - name: Set env need
      id: set_need
      run: |
        if [[ steps.filter.outputs.caddy == 'true' || steps.filter.outputs.realm == 'true' ]]; then
            echo '::set-output name=need::true'
        else
            echo '::set-output name=need::false'
        fi
    - name: Set env image_name
      id: image
      run: |
        if [[ steps.filter.outputs.caddy == 'true' ]]; then
            echo '::set-output name=image_name::caddy'
        elif [[ steps.filter.outputs.realm == 'true' ]]; then
            echo '::set-output name=image_name::realm'
        fi


  build-caddy:
    runs-on: ubuntu-latest
    # Wait from the paths-filter to be completed before starting next-job
    needs: paths-filter
    permissions:
      packages: write
      contents: read
    if: needs.paths-filter.outputs.need == 'true'
    env:
      IMAGE_NAME: ${{ needs.paths-filter.outputs.image_name }}
    steps:
      - uses: actions/checkout@v3

      - name: Build image
        run: docker build . --file Dockerfile.caddy --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        # This is where you will update the PAT to GITHUB_TOKEN
        run: echo "${{ secrets.PERSONALTOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

